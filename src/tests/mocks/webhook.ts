import type { z } from "zod";
import type { transactionSuccessful } from "../../zod/webhook";

export const mockChargeSuccessPayload: z.infer<typeof transactionSuccessful> = {
	event: "charge.success",
	data: {
		id: 316712345,
		domain: "test",
		status: "success",
		reference: "test-reference-123",
		amount: 50000,
		message: null,
		gateway_response: "Successful",
		paid_at: "2024-01-01T12:00:00.000Z",
		created_at: "2024-01-01T11:59:50.000Z",
		channel: "card",
		currency: "NGN",
		ip_address: "127.0.0.1",
		metadata: {
			cart_id: 1,
		},
		log: {
			time_spent: 10,
			attempts: 1,
			authentication: "pin",
			errors: 0,
			success: true,
			mobile: false,
			input: [],
			history: [],
		},
		fees: 750,
		fees_split: null,
		authorization: {
			authorization_code: "AUTH_123456789",
			bin: "408408",
			last4: "4081",
			exp_month: "12",
			exp_year: "2030",
			channel: "card",
			card_type: "visa",
			bank: "Test Bank",
			country_code: "NG",
			brand: "visa",
			account_name: null,
		},
		customer: {
			first_name: "John",
			last_name: "Doe",
			email: "john.doe@example.com",
			customer_code: "CUS_123456789",
			phone: null,
			metadata: null,
			risk_action: "default",
		},
		order_id: null,
		requested_amount: 50000,
		pos_transaction_data: null,
		connect: undefined,
	},
};
